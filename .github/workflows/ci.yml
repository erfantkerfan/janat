# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, production ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # a custum image
#    container:
#      image: kirschbaumdevelopment/laravel-test-runner:8.0

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: janat
          MYSQL_USER: sail
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install composer dependencies
        run: |
          composer install --optimize-autoloader --no-dev --prefer-dist --no-interaction

      - name: Prepare Laravel Env
        run: cp .env.example .env

      - name: Prepare Laravel key
        run:  php artisan key:generate

      - name: Run migrations
        run: php artisan migrate:fresh --seed --no-interaction --force

      - name: Run optimizations
        run: |
          php artisan view:cache
          php artisan optimize

#      - name: Run Testsuite
#        run: vendor/bin/phpunit tests/

      - name: Install front-end dependencies
        run: npm ci --production

      - name: Build front-end dependencies
        run: npm run production
